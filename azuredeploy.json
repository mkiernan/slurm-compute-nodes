{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "image": {
      "type": "string",
      "defaultValue": "SUSE:SLES-HPC:12-SP1",
      "allowedValues": [
        "SUSE:SLES-HPC:12-SP1",
        "OpenLogic:CentOS-HPC:7.1",
        "OpenLogic:CentOS-HPC:6.5",
        "OpenLogic:CentOS:7.2",
        "OpenLogic:CentOS:7.3",
        "Canonical:UbuntuServer:16.04-LTS",
        "Canonical:UbuntuServer:16.10"
      ],
      "metadata": {
        "description": "OS version to deploy. The CentOS-HPC & SLES-HPC images include the RDMA drivers for compute-to-compute MPI InfiniBand on A8, A9, H16r & H16mr VM sizes. Non *-HPC images need the RDMA drivers to be installed manually, or deploy without infiniband."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public dns prefix where the master node will be exposed"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password across all nodes."
      }
    },
    "hpcUserName": {
      "type": "string",
      "defaultValue": "hpc",
      "metadata": {
        "description": "User for running HPC applications with shared home directory and SSH public key authentication setup. This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
      }
    },
    "headNodeSize": {
      "type": "string",
      "defaultValue": "Standard_A8",
      "allowedValues": [
        "Standard_A4",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D4",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS4",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H16r"
      ],
      "metadata": {
        "description": "Size of the head node."
      }
    },
    "workerNodeSize": {
      "type": "string",
      "defaultValue": "Standard_H16r",
      "allowedValues": [
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A9",
        "Standard_A10",
        "Standard_A11",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_DS1",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_H8",
        "Standard_H8m",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr"
      ],
      "metadata": {
        "description": "Size of the worker nodes."
      }
    },
    "workerNodeCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This template creates N worker node. Use workerNodeCount to specify that N."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 128,
      "metadata": {
        "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "avset-hpc-clients",
      "metadata": {
        "description": "Availability set name is REQUIRED when using MPI/Infiniband, so that nodes can communicate with each other via RDMA"
      }
    }
  },
  "variables": {
    "imageReference_SUSE:SLES-HPC:12-SP1": {
      "publisher": "SUSE",
      "offer": "SLES-HPC",
      "sku": "12-SP1",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS-HPC:7.1": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "7.1",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS-HPC:6.5": {
      "publisher": "OpenLogic",
      "offer": "CentOS-HPC",
      "sku": "7.1",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:7.2": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.2",
      "version": "latest"
    },
    "imageReference_OpenLogic:CentOS:7.3": {
      "publisher": "OpenLogic",
      "offer": "CentOS",
      "sku": "7.3",
      "version": "latest"
    },
    "imageReference_Canonical:UbuntuServer:16.04-LTS": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    },
    "imageReference_Canonical:UbuntuServer:16.10": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.10",
      "version": "latest"
    },
    "imageReference": "[variables(concat('imageReference_',parameters('image')))]",
    "clientAvailabilitySetSettings": {
      "name": "[concat(parameters('availabilitySetName'))]",
      "faultDomainCount": "3",
      "updateDomainCount": "5"
    },
    "armApiVersion": "2015-06-15",
    "newStorageAccountName": "[concat('st', uniqueString(resourceGroup().id))]",
    "vmStorageAccountContainerName": "vhd",
    "OSDiskName": "osdisk",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressName": "publicips",
    "masterVMName": "master",
    "workerVMName": "worker",
    "nicName": "nic",
    "networkSettings": {
      "virtualNetworkName": "virtualnetwork",
      "addressPrefix": "10.0.0.0/16",
      "subnet": {
        "dse": {
          "name": "dse",
          "prefix": "10.0.0.0/24",
          "vnet": "virtualnetwork"
        }
      },
      "statics": {
        "workerRange": {
          "base": "10.0.0.",
          "start": 5
        },
        "master": "10.0.0.254"
      }
    },
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('networkSettings').virtualNetworkName)]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('networkSettings').subnet.dse.name)]",
    "templateBaseUrl": "https://raw.githubusercontent.com/mkiernan/slurm-compute-nodes/master/",
    "installationCLI": "[concat('bash azuredeploy.sh ', variables('masterVMName'), ' ', variables('workerVMName'), ' ', parameters('workerNodeCount'), ' ', parameters('hpcUserName'), ' ', variables('templateBaseUrl'))]",
    "storageAccountType": "Standard_LRS"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "[variables('armApiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('networkSettings').virtualNetworkName]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('networkSettings').addressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('networkSettings').subnet.dse.name]",
            "properties": {
              "addressPrefix": "[variables('networkSettings').subnet.dse.prefix]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('armApiVersion')]",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('networkSettings').statics.master]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('masterVMName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('headNodeSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[variables('masterVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),variables('masterVMName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk0.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk1.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk2.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk3.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk4",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 4,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk4.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk5",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 5,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk5.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk6",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 6,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk6.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk7",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 7,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk7.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk8",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 8,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk8.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk9",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 9,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk9.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk10",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 10,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk10.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk11",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 11,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk11.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk12",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 12,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk12.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk13",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 13,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk13.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk14",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 14,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk14.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            },
            {
              "name": "datadisk15",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 15,
              "vhd": {
                "Uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'-datadisk15.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterVMName'), '/Installation')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
          ],
          "commandToExecute": "[variables('installationCLI')]"
        }
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('workerVMName'), copyindex(), '/Installation')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'),'/extensions/Installation')]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('workerVMName'), copyindex())]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
          ],
          "commandToExecute": "[variables('installationCLI')]"
        }
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), 'worker', copyindex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('networkSettings').statics.workerRange.base, copyindex(variables('networkSettings').statics.workerRange.start))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('workerVMName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'worker', copyindex())]"
      ],
      "copy": {
        "name": "foo",
        "count": "[parameters('workerNodeCount')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('workerNodeSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('workerVMName'), copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),variables('workerVMName'),copyindex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'worker', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('armApiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('clientAvailabilitySetSettings').name]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[variables('clientAvailabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('clientAvailabilitySetSettings').updateDomainCount]"
      }
    }
  ],
  "outputs": {
    "masterFQDN": {
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]",
      "type": "string"
    }
  }
}